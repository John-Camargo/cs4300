services:
  - type: web
    name: movie-booking
    runtime: python
    rootDir: homework2/movie_theater_booking

    buildCommand: |
      pip install -r requirements.txt
      python manage.py collectstatic --noinput

    startCommand: |
      python manage.py migrate --noinput
      python - <<'PY'
      import os, django
      os.environ.setdefault("DJANGO_SETTINGS_MODULE", "movie_theater_booking.settings")
      django.setup()
      from django.contrib.auth import get_user_model
      from bookings.models import Seat, Movie

      # ----- Create/ensure superuser -----
      User = get_user_model()
      username = os.environ.get("DJANGO_SUPERUSER_USERNAME", "admin")
      email    = os.environ.get("DJANGO_SUPERUSER_EMAIL", "admin@example.com")
      password = os.environ.get("DJANGO_SUPERUSER_PASSWORD", "ChangeMe!123")
      u, created = User.objects.get_or_create(
          username=username,
          defaults={"email": email, "is_staff": True, "is_superuser": True},
      )
      if not created:
          u.is_staff = True
          u.is_superuser = True
          if email: u.email = email
      if password: u.set_password(password)
      u.save()
      print(f"Admin ready: {username}")

      # ----- Optional: seed seats (once) -----
      if not Seat.objects.exists():
          Seat.objects.bulk_create([Seat(seat_number=i, booked=False) for i in range(1,41)])
          print("Seeded 40 seats.")

      # ----- Optional: seed a few movies (only if none exist) -----
      if not Movie.objects.exists():
          Movie.objects.bulk_create([
              Movie(title="Inception", description="Dream heist.", release_date="2010-07-16", duration=148),
              Movie(title="Interstellar", description="Through a wormhole.", release_date="2014-11-07", duration=169),
              Movie(title="The Matrix", description="There is no spoon.", release_date="1999-03-31", duration=136),
          ])
          print("Seeded sample movies.")
      PY
      gunicorn movie_theater_booking.wsgi:application --bind 0.0.0.0:$PORT

    envVars:
      - key: PYTHON_VERSION
        value: 3.12.3
      - key: DJANGO_SETTINGS_MODULE
        value: movie_theater_booking.settings
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: ALLOWED_HOSTS
        value: ".onrender.com"
      - key: CSRF_TRUSTED_ORIGINS
        value: "https://*.onrender.com"
      - key: DATABASE_URL
        fromDatabase:
          name: movie-booking-db
          property: connectionString
      - key: DJANGO_SUPERUSER_USERNAME
        value: admin
      - key: DJANGO_SUPERUSER_EMAIL
        value: you@example.com
      - key: DJANGO_SUPERUSER_PASSWORD
        value: SWEHomework2

    plan: free
    autoDeploy: true

databases:
  - name: movie-booking-db
    plan: free
